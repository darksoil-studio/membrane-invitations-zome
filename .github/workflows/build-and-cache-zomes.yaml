name: "Build and cache zomes"
on:
  push: 
    branches: [ main, 'main-**' ]
  pull_request: 
    branches: [ main, 'main-**' ]

jobs:
  build-and-cache-zomes:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-24.11

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-ci

      - uses: cachix/cachix-action@v15
        with:
          name: darksoil-studio
      
      - uses: cachix/cachix-action@v15
        with:
          name: darksoil-studio

      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2

      - name: Build debug zomes
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.DARKSOIL_CACHIX_AUTH_TOKEN }}"
        run: |
          cachix watch-exec darksoil-studio -- nix build --no-update-lock-file --accept-flake-config -L .#membrane_invitations_integrity.meta.debug
          cachix push darksoil-studio $(nix path-info --json --accept-flake-config --no-warn-dirty .#membrane_invitations_integrity.meta.debug | jq -r 'keys[0]')

          cachix watch-exec darksoil-studio -- nix build --no-update-lock-file --accept-flake-config -L .#membrane_invitations.meta.debug
          cachix push darksoil-studio $(nix path-info --json --accept-flake-config --no-warn-dirty .#membrane_invitations.meta.debug | jq -r 'keys[0]')

      - name: Pin debug zomes
        if: github.event_name != 'pull_request' && github.ref_name == 'main'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.DARKSOIL_CACHIX_AUTH_TOKEN }}"
        run: |
          cachix pin darksoil-studio membrane_invitations_integrity_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#membrane_invitations_integrity.meta.debug | jq -r 'keys[0]')
          cachix pin darksoil-studio membrane_invitations_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#membrane_invitations.meta.debug | jq -r 'keys[0]')

      - name: Build release zomes
        if: matrix.os == 'ubuntu-latest'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.DARKSOIL_CACHIX_AUTH_TOKEN }}"
        run: |
          cachix watch-exec darksoil-studio -- nix build --no-update-lock-file --accept-flake-config -L .#membrane_invitations_integrity
          cachix push darksoil-studio $(nix path-info --json --accept-flake-config --no-warn-dirty .#membrane_invitations_integrity | jq -r 'keys[0]')

          cachix watch-exec darksoil-studio -- nix build --no-update-lock-file --accept-flake-config -L .#membrane_invitations
          cachix push darksoil-studio $(nix path-info --json --accept-flake-config --no-warn-dirty .#membrane_invitations | jq -r 'keys[0]')

      - name: Pin release zomes
        if: github.event_name != 'pull_request' && matrix.os == 'ubuntu-latest' && github.ref_name == 'main'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.DARKSOIL_CACHIX_AUTH_TOKEN }}"
        run: |
          cachix pin darksoil-studio membrane_invitations_integrity_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#membrane_invitations_integrity | jq -r 'keys[0]')
          cachix pin darksoil-studio membrane_invitations_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#membrane_invitations | jq -r 'keys[0]')

